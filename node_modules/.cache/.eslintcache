[{"/home/inr-lab/arat_segmentation/segmentation-interface/src/index.js":"1","/home/inr-lab/arat_segmentation/segmentation-interface/src/App.js":"2","/home/inr-lab/arat_segmentation/segmentation-interface/src/reportWebVitals.js":"3","/home/inr-lab/arat_segmentation/segmentation-interface/src/components/PlayVideo/PlayVideoCopy.js":"4","/home/inr-lab/arat_segmentation/segmentation-interface/src/components/Video/Video.js":"5","/home/inr-lab/arat_segmentation/segmentation-interface/src/components/PlayBack/PlayBack.js":"6"},{"size":775,"mtime":1668896352492,"results":"7","hashOfConfig":"8"},{"size":4796,"mtime":1669934442326,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1667512496463,"results":"10","hashOfConfig":"8"},{"size":28398,"mtime":1669867176278,"results":"11","hashOfConfig":"8"},{"size":2917,"mtime":1670186870275,"results":"12","hashOfConfig":"8"},{"size":4730,"mtime":1669531600992,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"17h3j0w",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/inr-lab/arat_segmentation/segmentation-interface/src/index.js",["35"],[],"/home/inr-lab/arat_segmentation/segmentation-interface/src/App.js",["36","37","38"],[],"import './App.css';\n// import { Container } from 'react-bootstrap';\nimport { Component } from 'react';\n\nimport { AiOutlineCheck } from \"react-icons/ai/\";\nimport { PlayVideoCopy } from './components/PlayVideo/PlayVideoCopy';\nimport { Route, Routes, NavLink } from \"react-router-dom\";\nimport axios from 'axios';\n\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      PatientTaskHandMapping: [],\n      display: \"block\"\n    }\n    // this.render=this.render.bind(this);\n}\ncomponentDidMount() {\n  // axios.get('https://localhost:44305/api/Segmentation/GetPatientTaskInformation',{ crossdomain: true })\n    axios.get(`http://localhost:5000/PatientTaskHandMapping`)\n    .then(res => {\n      const PatientTaskHandMapping =res.data;\n      this.setState({ PatientTaskHandMapping });\n      console.log(PatientTaskHandMapping.filter(list => list.isSubmitted === true));\n    })\n    // axios.get('http://localhost:5016/api/Segmentation/GetPatientTaskInformation', {\n    //   \"Access-Control-Allow-Origin\": \"http://localhost:3000/\"  \n    // })\n    // .then(res => {\n    //     console.log(res.data)\n    //     var PatientTaskHandMapping =res.data;\n    //     this.setState({ PatientTaskHandMapping });\n    // })\n    // let url = 'http://localhost:5016/api/Segmentation/GetPatientTaskInformation';\n    // let headers = new Headers();\n\n    // headers.append('Content-Type', 'application/json');\n    // headers.append('Accept', 'application/json');\n    // // headers.append('Authorization', 'Basic ' + base64.encode(username + \":\" +  password));\n    // headers.append('Origin','http://localhost:3000');\n    // fetch(url, {\n    //   method: \"GET\",\n    //   mode: 'cors',\n    //   headers: headers\n    // })\n    // .then(res => res.json())\n    // .then(out =>\n    //   console.log('Checkout this JSON! ', out))\n    // .catch(err => { throw err });\n   \n \n}\n\n  render(){\n    var {\n      display\n    } = this.state;\n    // const response = fetch(\"https://localhost:44305/api/Segmentation/GetPatientTaskInformation\", {\n    //     method: \"GET\",\n    //     mode: \"cors\",\n    //     headers: {\n    //       'content-type': 'application/json; charset=utf-8 ',\n    //       'date': 'Mon,07 Nov 2022 18:57:39 GMT ',\n    //       'server': 'Microsoft-IIS/10.0 ',\n    //       'x-powered-by': 'ASP.NET '\n    //     },\n    //     body: JSON.stringify(data),\n    // });\n    // console.log(response.json());\n\n    function navTo(){\n      document.getElementsByTagName(\"ul\")[0].style.display=\"none\";\n    }\n    function navBack(){\n      document.getElementsByTagName(\"ul\")[0].style.display=\"block\";\n    }\n  return (\n    <div className=\"container-fluid\">   \n    <h1 className=\"display-1\"><NavLink to=\"/\" onClick={()=>{\n      this.setState({display: \"block\"})\n      document.getElementsByTagName(\"ul\")[0].style.display=\"block\";\n    }}>ARAT Segmentation</NavLink></h1>\n    <hr width=\"100%\"></hr>  \n    <Routes> \n      <Route path='/' element={null} />\n        {\n        this.state.PatientTaskHandMapping\n        .map\n        (\n            list=>\n            <Route  key={\"PTH\"+list.id} path={\"/Segmentation\"+list.id} element={\n            <PlayVideoCopy \n            PTHID={list.id} \n            HANDID={list.handId}\n            PATIENTID={list.patientId}\n            PATIENTCODE={list['patient']['patientCode']}\n            TASKID={list.taskId}\n            IsSubmitted={list.IsSubmitted}\n            />\n            }/>\n        )\n        }\n     </Routes>  \n     <ul>\n     {\n        this.state.PatientTaskHandMapping.filter(list => list.isSubmitted === true)\n        .map\n        (\n            list=>\n            <li key={\"PTH\"+list.id} >\n            <NavLink to={\"/Segmentation\"+list.id} id={list.id} onClick={()=>{\n              // navTo();\n              this.setState({display: \"none\"});\n              document.getElementsByTagName(\"ul\")[0].style.display=\"none\";\n            }}>\n              <h2>Segmentation {list.id}: Patient {list['patient']['patientCode']}, Task {list.taskId}, Hand {list.handId} <AiOutlineCheck size={30} color=\"green\"/></h2>\n              \n            </NavLink>\n            </li>\n        )\n      } \n      {\n        this.state.PatientTaskHandMapping.filter(list => list.isSubmitted === false)\n        .map\n        (\n            list=>\n            <li key={\"PTH\"+list.id} >\n            <NavLink to={\"/Segmentation\"+list.id} id={list.id} onClick={()=>{\n              // navTo();\n              this.setState({display: \"none\"});\n              document.getElementsByTagName(\"ul\")[0].style.display=\"none\";\n            }}>\n              <h2>Segmentation {list.id}: Patient {list['patient']['patientCode']}, Task {list.taskId}, Hand {list.handId} </h2>\n            </NavLink>\n            </li>\n        )\n      } \n        </ul>     \n    </div>\n    );\n  }\n}\n\nexport default App;\n",[],"/home/inr-lab/arat_segmentation/segmentation-interface/src/reportWebVitals.js",[],[],[],"/home/inr-lab/arat_segmentation/segmentation-interface/src/components/PlayVideo/PlayVideoCopy.js",["39","40"],[],"/home/inr-lab/arat_segmentation/segmentation-interface/src/components/Video/Video.js",["41","42","43","44","45","46"],[],"/home/inr-lab/arat_segmentation/segmentation-interface/src/components/PlayBack/PlayBack.js",["47"],[],{"ruleId":"48","severity":1,"message":"49","line":8,"column":10,"nodeType":"50","messageId":"51","endLine":8,"endColumn":18},{"ruleId":"48","severity":1,"message":"52","line":58,"column":7,"nodeType":"50","messageId":"51","endLine":58,"endColumn":14},{"ruleId":"48","severity":1,"message":"53","line":73,"column":14,"nodeType":"50","messageId":"51","endLine":73,"endColumn":19},{"ruleId":"48","severity":1,"message":"54","line":76,"column":14,"nodeType":"50","messageId":"51","endLine":76,"endColumn":21},{"ruleId":"48","severity":1,"message":"55","line":202,"column":7,"nodeType":"50","messageId":"51","endLine":202,"endColumn":29},{"ruleId":"48","severity":1,"message":"56","line":211,"column":7,"nodeType":"50","messageId":"51","endLine":211,"endColumn":18},{"ruleId":"48","severity":1,"message":"57","line":1,"column":10,"nodeType":"50","messageId":"51","endLine":1,"endColumn":27},{"ruleId":"48","severity":1,"message":"58","line":28,"column":13,"nodeType":"50","messageId":"51","endLine":28,"endColumn":21},{"ruleId":"48","severity":1,"message":"59","line":29,"column":13,"nodeType":"50","messageId":"51","endLine":29,"endColumn":24},{"ruleId":"60","severity":1,"message":"61","line":39,"column":27,"nodeType":"62","messageId":"63","endLine":39,"endColumn":29},{"ruleId":"60","severity":1,"message":"61","line":43,"column":32,"nodeType":"62","messageId":"63","endLine":43,"endColumn":34},{"ruleId":"60","severity":1,"message":"61","line":50,"column":32,"nodeType":"62","messageId":"63","endLine":50,"endColumn":34},{"ruleId":"48","severity":1,"message":"64","line":3,"column":26,"nodeType":"50","messageId":"51","endLine":3,"endColumn":49},"no-unused-vars","'PlayBack' is defined but never used.","Identifier","unusedVar","'display' is assigned a value but never used.","'navTo' is defined but never used.","'navBack' is defined but never used.","'PatientTaskHandMapping' is assigned a value but never used.","'IsSubmitted' is assigned a value but never used.","'setSelectionRange' is defined but never used.","'duration' is assigned a value but never used.","'currentTime' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AiOutlineFullscreenExit' is defined but never used."]