{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucyg\\\\Desktop\\\\USC\\\\INR\\\\segmentation-interface\\\\src\\\\components\\\\PlayVideo\\\\PlayVideoCopy.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './PlayVideo.css';\nimport { AiFillPlayCircle } from \"react-icons/ai/\";\nimport '../SideBar/Timestamp/Timestamp.css';\nimport { Video } from '../Video/Video';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class PlayVideoCopy extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      VideoSegment: [],\n      segmentHistories: [],\n      GetSegment: {},\n      videos: [],\n      recommended_view: [],\n      PatientTaskHandMapping1: [],\n      Camera: [],\n      Feedback: [],\n      PatientTaskHandMappingId: this.props.PTHID,\n      TaskId: this.props.TASKID,\n      PatientId: this.props.PATIENTID,\n      HandId: this.props.HANDID,\n      IsSubmitted: this.props.IsSubmitted,\n      segmentId: 1,\n      // start at IPT\n      SegmentJson: [],\n      view: \"\",\n      definition: \"\",\n      currentTime: 0,\n      cameraId: 0,\n      prevSegmentId: 1,\n      instruction: \"Please Select the IN and OUT Points for the Segment IPT\",\n      timeStart: 0,\n      timeEnd: -1\n    };\n\n    // this.render=this.render.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.state.HandId === 1) {\n      axios.get(`http://localhost:5000/CameraLeft`).then(res => {\n        const Camera = res.data;\n        this.setState({\n          Camera\n        });\n        this.setState({\n          cameraId: 1\n        });\n      });\n    } else {\n      axios.get(`http://localhost:5000/CameraRight`).then(res => {\n        const Camera = res.data;\n        this.setState({\n          Camera\n        });\n        this.setState({\n          cameraId: 4\n        });\n      });\n    }\n    axios.get(`http://localhost:5000/Segment`).then(res => {\n      const SegmentJson = res.data;\n      this.setState({\n        SegmentJson\n      });\n    });\n    axios.get(`http://localhost:5000/VideoSegment/` + this.state.PatientTaskHandMappingId).then(res => {\n      const GetSegment = res.data;\n      if (GetSegment.length) {\n        var VideoSegment = GetSegment;\n        let i = 0;\n        while (i < VideoSegment.length) {\n          VideoSegment[i]['IsChecked'] = 0;\n          VideoSegment[i]['inColor'] = \"white\";\n          VideoSegment[i]['outColor'] = \"white\";\n          VideoSegment[i]['color'] = \"white\";\n          i++;\n        }\n        VideoSegment[0][\"color\"] = \"#AFE1AF\";\n        this.setState({\n          VideoSegment\n        });\n      }\n    });\n    axios.get(`http://localhost:5000/TaskSegmentCameraMapping/` + this.state.PatientTaskHandMappingId).then(res => {\n      const data = res.data;\n      // const recommended_view = data['taskSegmentHandCameraMapping'];\n      const recommended_view = data['rec_view'].filter(view => view.taskId === this.state.TaskId);\n      console.log(\"recommended_view\", recommended_view);\n      const videos = data['files'];\n      this.setState({\n        videos\n      });\n      var VideoSegment = this.state.VideoSegment;\n      // if (this.state.IsSubmitted === 0){\n      if (VideoSegment.length === 0) {\n        let i = 0;\n        while (i < recommended_view.length) {\n          VideoSegment.push({\n            \"patientTaskHandMappingId\": this.state.PatientTaskHandMappingId,\n            \"segmentId\": recommended_view[i].segmentId,\n            \"start\": undefined,\n            \"end\": undefined,\n            \"IsChecked\": 0,\n            \"inColor\": \"white\",\n            \"outColor\": \"white\",\n            \"color\": \"white\"\n          });\n          i++;\n        }\n        VideoSegment[0][\"color\"] = \"#AFE1AF\";\n        this.setState({\n          VideoSegment\n        });\n      }\n      const cameraId = recommended_view.filter(view => view.segmentId === this.state.segmentId)[0].cameraId;\n      const view = this.state.Camera.filter(view => view.id === cameraId).ViewType;\n      const definition = recommended_view.filter(view => view.segmentId === this.state.segmentId)[0].Definition;\n      // const definition = \"undefined\";\n      this.setState({\n        recommended_view\n      });\n      this.setState({\n        cameraId\n      });\n      this.setState({\n        view\n      });\n      this.setState({\n        definition\n      });\n    });\n    axios.get(`http://localhost:5000/Feedback`).then(res => {\n      const Feedback = res.data;\n      this.setState({\n        Feedback\n      });\n    });\n  }\n  render() {\n    var {\n      VideoSegment,\n      segmentHistories,\n      videos,\n      recommended_view,\n      TaskId,\n      PatientId,\n      HandId,\n      PatientTaskHandMappingId,\n      PatientTaskHandMapping,\n      definition,\n      segmentId,\n      Camera,\n      Feedback,\n      cameraId,\n      SegmentJson,\n      prevSegmentId,\n      IsSubmitted,\n      currentTime,\n      instruction,\n      timeStart,\n      timeEnd\n    } = this.state;\n    var pauseTime = -1;\n    function onTimeUpdate(e) {\n      currentTime = e.target.currentTime;\n      if (pauseTime >= 0) {\n        if (currentTime >= pauseTime) {\n          var vid = document.getElementsByClassName(\"react-video-player\")[0];\n          vid.pause();\n          pauseTime = -1;\n        }\n      }\n    }\n    function changeColor(id1, btn1, id2, btn2) {\n      var segment1 = VideoSegment.filter(segment => segment.segmentId === id1)[0];\n      var segment2 = VideoSegment.filter(segment => segment.segmentId === id2)[0];\n      var val1 = segment1.start;\n      if (btn1 === \"OUT\") val1 = segment1.end;\n      var val2 = segment2.start;\n      if (btn2 === \"OUT\") val2 = segment2.end;\n      if (val2) {\n        if (Math.abs(val1 - val2) > 2) {\n          if (btn1 === \"OUT\") VideoSegment.filter(segment => segment.segmentId === id1)[0]['outColor'] = \"yellow\";else VideoSegment.filter(segment => segment.segmentId === id1)[0]['inColor'] = \"yellow\";\n          if (btn2 === \"OUT\") VideoSegment.filter(segment => segment.segmentId === id2)[0]['outColor'] = \"yellow\";else VideoSegment.filter(segment => segment.segmentId === id2)[0]['inColor'] = \"yellow\";\n        } else {\n          if (btn1 === \"OUT\") VideoSegment.filter(segment => segment.segmentId === id1)[0]['outColor'] = \"white\";else VideoSegment.filter(segment => segment.segmentId === id1)[0]['inColor'] = \"white\";\n          if (btn2 === \"OUT\") VideoSegment.filter(segment => segment.segmentId === id2)[0]['outColor'] = \"white\";else VideoSegment.filter(segment => segment.segmentId === id2)[0]['inColor'] = \"white\";\n        }\n      }\n    }\n    function IN() {\n      var time = currentTime;\n      VideoSegment.filter(view => view.segmentId === segmentId)[0].start = Math.floor(time * 30);\n      if (segmentId === 3) {\n        changeColor(segmentId, \"IN\", segmentId - 2, \"OUT\");\n      }\n      if (segmentId > 3) {\n        if (VideoSegment.length > 4) {\n          if (segmentId === 6) changeColor(segmentId, \"IN\", 3, \"OUT\");else if (segmentId === 5) changeColor(segmentId, \"IN\", 6, \"OUT\");else if (segmentId === 4) changeColor(segmentId, \"IN\", 5, \"OUT\");\n        } else changeColor(segmentId, \"IN\", segmentId - 1, \"OUT\");\n      }\n    }\n    function OUT() {\n      var time = currentTime;\n      console.log(segmentId, VideoSegment.filter(view => view.segmentId === segmentId));\n      VideoSegment.filter(view => view.segmentId === segmentId)[0][\"end\"] = Math.floor(time * 30);\n      if (segmentId === 1) {\n        changeColor(segmentId, \"OUT\", segmentId + 1, \"OUT\");\n        changeColor(segmentId, \"OUT\", segmentId + 2, \"IN\");\n      } else if (segmentId === 2) {\n        changeColor(segmentId, \"OUT\", segmentId - 1, \"OUT\");\n      } else if (segmentId > 1) {\n        if (VideoSegment.length > 4) {\n          if (segmentId === 3) changeColor(segmentId, \"OUT\", 6, \"IN\");else if (segmentId === 6) changeColor(segmentId, \"OUT\", 5, \"IN\");else if (segmentId === 5) changeColor(segmentId, \"OUT\", 4, \"IN\");\n        } else {\n          if (segmentId < VideoSegment.length - 1) changeColor(segmentId, \"OUT\", segmentId + 1, \"IN\");\n        }\n      }\n    }\n    function onSelect(id) {\n      if (id > 1) {\n        var check = undefined;\n        if (id === 6) check = 3;else if (id === 5) check = 6;else if (id === 4) {\n          if (VideoSegment.length > 4) check = 5;else check = id - 1;\n        } else check = id - 1;\n        var segment = VideoSegment.filter(segment => segment.segmentId === check)[0];\n        if (segment.start === undefined || segment.end === undefined) {\n          alert(\"Make sure you have filled out the previous segment entries before you select a new one\");\n          segmentId = id - 1;\n          return;\n        }\n      }\n      segmentId = id;\n      // background color  \n      if (prevSegmentId !== segmentId) {\n        if (VideoSegment.filter(segment => segment.segmentId === prevSegmentId)[0]['IsChecked'] === 1) {\n          VideoSegment.filter(segment => segment.segmentId === prevSegmentId)[0]['color'] = \"rgb(211, 211, 211)\";\n        } else {\n          VideoSegment.filter(segment => segment.segmentId === prevSegmentId)[0]['color'] = \"rgba(0, 0, 0, 0)\";\n        }\n      }\n      VideoSegment.filter(segment => segment.segmentId === segmentId)[0]['color'] = \"#AFE1AF\";\n      prevSegmentId = segmentId;\n      // in and out buttons\n      // document.getElementById(\"out\").disabled=false;\n      // document.getElementById(\"in\").disabled=false;\n      var Segment = SegmentJson.filter(view => view.id === parseInt(segmentId))[0].SegmentLabel;\n      instruction = \"Please Select the IN and OUT Points for the Segment \" + Segment;\n      definition = recommended_view.filter(view => view.segmentId === segmentId)[0].Definition;\n      cameraId = recommended_view.filter(view => view.segmentId === parseInt(segmentId))[0].cameraId;\n    }\n    function selectTimestamp(position, id) {\n      var time = VideoSegment.filter(segment => segment.segmentId === id)[0][position];\n      document.getElementsByClassName(\"react-video-player\")[0].currentTime = time / 30;\n    }\n    function onPlayback(segmentId) {\n      var start = VideoSegment.filter(segment => segment.segmentId === segmentId)[0]['start'];\n      var end = VideoSegment.filter(segment => segment.segmentId === segmentId)[0]['end'];\n      console.log(start / 30, end / 30);\n      var vid = document.getElementsByClassName(\"react-video-player\")[0];\n      document.getElementsByClassName(\"react-video-player\")[0].currentTime = start / 30;\n      timeStart = start / 30;\n      vid.play();\n      pauseTime = (end - 7) / 30;\n      timeEnd = (end - 7) / 30;\n    }\n    function onCheck(id, start, end) {\n      var segment = VideoSegment.filter(segment => segment.segmentId === id)[0];\n      var checkBox = document.getElementById(\"CHECK\" + id);\n      if (segment.start === undefined || segment.end === undefined) {\n        checkBox.checked = false;\n        alert(\"Make sure you have filled out the segment entries before you check them\");\n        return;\n      }\n      if (segment.IsChecked === 0) {\n        if (segment.color === \"white\") {\n          VideoSegment.filter(segment => segment.segmentId === id)[0]['color'] = \"rgb(211, 211, 211)\";\n        }\n        VideoSegment.filter(segment => segment.segmentId === id)[0].IsChecked = 1;\n        var logsId = segmentHistories.length + 1;\n        segmentHistories.push({\n          \"id\": logsId,\n          \"patientId\": PatientId,\n          \"taskId\": TaskId,\n          \"cameraId\": cameraId,\n          //update onSelect\n          \"handId\": HandId,\n          \"segmentId\": id,\n          \"start\": start,\n          \"end\": end,\n          \"isSubmitted\": false\n        });\n      } else {\n        if (segment.color === \"rgb(211, 211, 211)\") {\n          VideoSegment.filter(segment => segment.segmentId === id)[0]['color'] = \"white\";\n        }\n        VideoSegment.filter(segment => segment.segmentId === id)[0].IsChecked = 0;\n      }\n    }\n    function switchView(cameraId) {\n      // var logsId = GetSegment.length+1;\n      segmentHistories.push({\n        // \"id\": logsId,\n        \"patientId\": PatientId,\n        \"taskId\": TaskId,\n        \"cameraId\": cameraId,\n        //update onSelect\n        \"handId\": HandId,\n        \"segmentId\": segmentId,\n        \"start\": VideoSegment.filter(view => view.segmentId === segmentId)[0].start,\n        \"end\": VideoSegment.filter(view => view.segmentId === segmentId)[0].end,\n        \"isSubmitted\": 0\n      });\n      // var vid = document.getElementsByClassName(\"react-video-player\")[0];\n      // vid.currentTime=0;\n    }\n\n    function submitFeedback(e) {\n      e.preventDefault();\n      var feedback = e.target[0].value;\n      if (feedback === '') {\n        alert(\"The feedback box shouldn't be empty.\");\n        return;\n      }\n      var feedbackId = Feedback.length + 1;\n      axios.post('http://localhost:5000/Feedback/' + String(feedbackId), {\n        \"id\": feedbackId,\n        \"patientId\": PatientId,\n        \"taskId\": TaskId,\n        \"cameraId\": cameraId,\n        //update onSelect\n        \"handId\": HandId,\n        \"segmentId\": segmentId,\n        \"feedback\": e.target[0].value\n      }).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n      alert(\"You have successfully submitted your feedback!\");\n    }\n    function submit(e) {\n      e.preventDefault();\n      let j = 0;\n      var submittedSegments = [];\n      console.log(VideoSegment);\n      while (j < VideoSegment.length) {\n        if (VideoSegment[j]['IsChecked'] === 0) {\n          alert(\"Check all entries before you submit!\");\n          return;\n        }\n        submittedSegments.push({\n          \"id\": VideoSegment[j]['id'] ? VideoSegment[j]['id'] : 0,\n          \"patientTaskHandMappingId\": VideoSegment[j]['patientTaskHandMappingId'],\n          \"segmentId\": VideoSegment[j]['segmentId'],\n          \"start\": VideoSegment[j]['start'],\n          \"end\": VideoSegment[j]['end']\n        });\n        j++;\n      }\n      let model = {\n        'submittedSegments': submittedSegments,\n        'segmentHistories': segmentHistories\n      };\n      console.log('post model', model);\n      axios.post('http://localhost:5000/VideoSegment/', model);\n      alert(\"You have successfully submitted the timestamp!\");\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PlayVideo\",\n        children: [videos.filter(video => video.cameraId === this.state.cameraId).map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-play\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Patient \", PatientId, \", Task \", TaskId, \", \", Camera.filter(view => view.id === video.cameraId)[0].ViewType, \" View\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Video, {\n            url: \"./Videos/\" + video.fileName,\n            timeStart: timeStart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 19\n          }, this)]\n        }, video.fileName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"in\",\n            onClick: () => {\n              IN();\n              this.setState({\n                VideoSegment\n              });\n            },\n            children: \"IN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instruction\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              id: \"instruction\",\n              children: instruction\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"out\",\n            onClick: () => {\n              OUT();\n              this.setState({\n                VideoSegment\n              });\n            },\n            children: \"OUT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: definition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this)]\n      }, 'PlayVideo', true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SideBar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SwitchView\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"viewHeader\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Switch View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"SideVideos\",\n            children: videos.filter(video => video.cameraId !== this.state.cameraId).map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"video-preview\",\n              onClick: () => {\n                switchView(video.cameraId);\n                this.setState({\n                  cameraId: video.cameraId\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"video\", {\n                src: \"./Videos/\" + video.fileName,\n                title: \"./Videos/\" + video.fileName,\n                className: \"sidebarVideo\",\n                id: video.View\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Patient \", PatientId, \", Task \", TaskId, \", \", Camera.filter(view => view.id === video.cameraId)[0].ViewType, \" View\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 21\n              }, this)]\n            }, video.fileName, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timestamp\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"TimeStamp\",\n            onSubmit: e => {\n              submit(e);\n              this.setState({\n                segmentHistories\n              });\n              this.setState({\n                PatientTaskHandMapping\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"TimestampHeader\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Timestamp Record\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"TimestampTable\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Segment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 443,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"IN\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"OUT\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 445,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [VideoSegment.map(segment => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    id: \"ROW\" + segment.segmentId,\n                    style: {\n                      \"backgroundColor\": segment.color\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      id: segment.segmentId,\n                      onClick: () => {\n                        onSelect(segment.segmentId);\n                        this.setState({\n                          cameraId\n                        });\n                        this.setState({\n                          definition\n                        });\n                        this.setState({\n                          instruction\n                        });\n                        this.setState({\n                          prevSegmentId\n                        });\n                        this.setState({\n                          segmentId\n                        });\n                      },\n                      children: SegmentJson.filter(view => view.id === segment.segmentId)[0].SegmentLabel\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 453,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        value: segment.start,\n                        type: \"number\",\n                        id: \"IN\" + String(segment.segmentId),\n                        onClick: () => {\n                          selectTimestamp(\"start\", segment.segmentId);\n                        },\n                        readOnly: \"readOnly\",\n                        style: {\n                          \"backgroundColor\": segment.inColor\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 463,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 463,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        value: segment.end,\n                        type: \"number\",\n                        id: \"OUT\" + String(segment.segmentId),\n                        onClick: () => {\n                          selectTimestamp(\"end\", segment.segmentId);\n                        },\n                        readOnly: \"readOnly\",\n                        style: {\n                          \"backgroundColor\": segment.outColor\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 466,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 466,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"check\",\n                        type: \"checkbox\",\n                        onClick: () => {\n                          onCheck(segment.segmentId, segment.start, segment.end);\n                          this.setState({\n                            segmentHistories\n                          });\n                          this.setState({\n                            VideoSegment\n                          });\n                        },\n                        id: \"CHECK\" + String(segment.segmentId)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 469,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 469,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        onClick: () => {\n                          onPlayback(segment.segmentId);\n                          this.setState({\n                            timeEnd\n                          });\n                        },\n                        children: /*#__PURE__*/_jsxDEV(AiFillPlayCircle, {\n                          size: 30\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 478,\n                          columnNumber: 32\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 474,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 474,\n                      columnNumber: 27\n                    }, this)]\n                  }, segment.segmentId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 25\n                  }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: \"5\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"submit\",\n                        className: \"submit\",\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 482,\n                        columnNumber: 39\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 482,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"Feedback\",\n            onSubmit: e => {\n              submitFeedback(e);\n              this.setState({\n                Feedback\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedbackHeader\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"feedbackTable\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      placeholder: \"Write something\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 498,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"submitFeedback\",\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 39\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this)]\n      }, 'SideBar', true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }, this)]\n    }, 'content', true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","AiFillPlayCircle","Video","PlayVideoCopy","constructor","props","state","VideoSegment","segmentHistories","GetSegment","videos","recommended_view","PatientTaskHandMapping1","Camera","Feedback","PatientTaskHandMappingId","PTHID","TaskId","TASKID","PatientId","PATIENTID","HandId","HANDID","IsSubmitted","segmentId","SegmentJson","view","definition","currentTime","cameraId","prevSegmentId","instruction","timeStart","timeEnd","componentDidMount","get","then","res","data","setState","length","i","filter","taskId","console","log","push","undefined","id","ViewType","Definition","render","PatientTaskHandMapping","pauseTime","onTimeUpdate","e","target","vid","document","getElementsByClassName","pause","changeColor","id1","btn1","id2","btn2","segment1","segment","segment2","val1","start","end","val2","Math","abs","IN","time","floor","OUT","onSelect","check","alert","Segment","parseInt","SegmentLabel","selectTimestamp","position","onPlayback","play","onCheck","checkBox","getElementById","checked","IsChecked","color","logsId","switchView","submitFeedback","preventDefault","feedback","value","feedbackId","post","String","response","catch","error","submit","j","submittedSegments","model","video","map","fileName","View","inColor","outColor"],"sources":["C:/Users/lucyg/Desktop/USC/INR/segmentation-interface/src/components/PlayVideo/PlayVideoCopy.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport './PlayVideo.css'\r\nimport { AiFillPlayCircle } from \"react-icons/ai/\";\r\nimport '../SideBar/Timestamp/Timestamp.css';\r\nimport { Video } from '../Video/Video';\r\n\r\n\r\nexport class PlayVideoCopy extends Component {  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      VideoSegment: [],\r\n      segmentHistories: [],\r\n      GetSegment: {},\r\n      videos: [],\r\n      recommended_view: [],\r\n      PatientTaskHandMapping1: [],\r\n      Camera: [],\r\n      Feedback: [],\r\n      PatientTaskHandMappingId: this.props.PTHID,\r\n      TaskId: this.props.TASKID,\r\n      PatientId: this.props.PATIENTID,\r\n      HandId: this.props.HANDID,\r\n      IsSubmitted: this.props.IsSubmitted,\r\n      segmentId: 1, // start at IPT\r\n      SegmentJson: [],\r\n      view: \"\",\r\n      definition: \"\",\r\n      currentTime: 0,\r\n      cameraId: 0,\r\n      prevSegmentId: 1,\r\n      instruction: \"Please Select the IN and OUT Points for the Segment IPT\",\r\n      timeStart: 0,\r\n      timeEnd: -1\r\n    }\r\n    \r\n    // this.render=this.render.bind(this);\r\n    \r\n  }\r\n  \r\n  async componentDidMount() {\r\n    if (this.state.HandId === 1) {\r\n      axios.get(`http://localhost:5000/CameraLeft`)\r\n      .then(res => {\r\n        const Camera =res.data;\r\n        this.setState({ Camera });\r\n        this.setState({ cameraId: 1 });\r\n      })\r\n    }\r\n    else {\r\n      axios.get(`http://localhost:5000/CameraRight`)\r\n      .then(res => {\r\n        const Camera =res.data;\r\n        this.setState({ Camera });\r\n        this.setState({ cameraId: 4 });\r\n      })\r\n    }\r\n    \r\n    axios.get(`http://localhost:5000/Segment`)\r\n    .then(res => {\r\n      const SegmentJson =res.data;\r\n      this.setState({ SegmentJson });\r\n    })\r\n\r\n    axios.get(`http://localhost:5000/VideoSegment/`+this.state.PatientTaskHandMappingId)\r\n    .then(res => {\r\n      const GetSegment =res.data;\r\n      if (GetSegment.length){\r\n        var VideoSegment = GetSegment;\r\n        let i = 0;\r\n        while ( i < VideoSegment.length) {\r\n          VideoSegment[i]['IsChecked']=0;\r\n          VideoSegment[i]['inColor']=\"white\";\r\n          VideoSegment[i]['outColor']=\"white\";\r\n          VideoSegment[i]['color']=\"white\";\r\n          i++;\r\n        }\r\n        VideoSegment[0][\"color\"]=\"#AFE1AF\";\r\n        this.setState({ VideoSegment });\r\n      }\r\n    })\r\n    axios.get(`http://localhost:5000/TaskSegmentCameraMapping/`+this.state.PatientTaskHandMappingId)\r\n    .then(res => {\r\n      const data =res.data;\r\n      // const recommended_view = data['taskSegmentHandCameraMapping'];\r\n      const recommended_view = data['rec_view'].filter(view => view.taskId === this.state.TaskId);\r\n      console.log(\"recommended_view\", recommended_view);\r\n      const videos = data['files'];\r\n      this.setState({ videos });\r\n      var VideoSegment = this.state.VideoSegment;\r\n      // if (this.state.IsSubmitted === 0){\r\n      if (VideoSegment.length === 0){\r\n        let i = 0;\r\n        while (i < recommended_view.length) {\r\n          VideoSegment.push({\r\n            \"patientTaskHandMappingId\": this.state.PatientTaskHandMappingId,\r\n            \"segmentId\": recommended_view[i].segmentId,\r\n            \"start\":undefined,\r\n            \"end\":undefined,\r\n            \"IsChecked\": 0,\r\n            \"inColor\": \"white\",\r\n            \"outColor\": \"white\",\r\n            \"color\": \"white\"\r\n          });\r\n          i++;\r\n        }\r\n        VideoSegment[0][\"color\"]=\"#AFE1AF\";\r\n        this.setState({ VideoSegment });\r\n      }      \r\n      const cameraId = recommended_view.filter(view => view.segmentId === this.state.segmentId)[0].cameraId;\r\n      const view = this.state.Camera.filter(view => view.id === cameraId).ViewType;\r\n      const definition = recommended_view.filter(view => view.segmentId === this.state.segmentId)[0].Definition;\r\n      // const definition = \"undefined\";\r\n      this.setState({ recommended_view });\r\n      this.setState({ cameraId });\r\n      this.setState({ view });\r\n      this.setState({ definition });\r\n    })\r\n    axios.get(`http://localhost:5000/Feedback`)\r\n      .then(res => { \r\n        const Feedback =res.data;\r\n        this.setState({ Feedback });\r\n    })\r\n  }\r\n  \r\n  render() { \r\n    \r\n    var { \r\n      VideoSegment,\r\n      segmentHistories,\r\n      videos,\r\n      recommended_view,\r\n      TaskId,\r\n      PatientId,\r\n      HandId,\r\n      PatientTaskHandMappingId,\r\n      PatientTaskHandMapping,\r\n      definition,\r\n      segmentId,\r\n      Camera, \r\n      Feedback,\r\n      cameraId, \r\n      SegmentJson, \r\n      prevSegmentId, \r\n      IsSubmitted,\r\n      currentTime,\r\n      instruction,\r\n      timeStart,\r\n      timeEnd\r\n    } = this.state;\r\n    var pauseTime = -1;\r\n    function onTimeUpdate(e){\r\n      currentTime = e.target.currentTime;\r\n      if (pauseTime >= 0) {\r\n        if (currentTime >= pauseTime) {\r\n          var vid = document.getElementsByClassName(\"react-video-player\")[0];\r\n          vid.pause();\r\n          pauseTime = -1;\r\n        }\r\n      }\r\n    }\r\n    function changeColor(id1, btn1, id2, btn2) {\r\n      var segment1 = VideoSegment.filter(segment=> segment.segmentId === id1)[0];\r\n      var segment2 = VideoSegment.filter(segment=> segment.segmentId === id2)[0];\r\n      var val1 = segment1.start;\r\n      if (btn1 === \"OUT\") val1 = segment1.end;\r\n      var val2 = segment2.start;\r\n      if (btn2 === \"OUT\") val2 = segment2.end;\r\n      if (val2){\r\n        if (Math.abs(val1 - val2) > 2) {\r\n          if (btn1 === \"OUT\") VideoSegment.filter(segment=> segment.segmentId === id1)[0]['outColor'] = \"yellow\";\r\n          else VideoSegment.filter(segment=> segment.segmentId === id1)[0]['inColor'] = \"yellow\";\r\n          if (btn2 === \"OUT\") VideoSegment.filter(segment=> segment.segmentId === id2)[0]['outColor'] = \"yellow\";\r\n          else VideoSegment.filter(segment=> segment.segmentId === id2)[0]['inColor'] = \"yellow\";\r\n        }\r\n        else {\r\n          if (btn1 === \"OUT\") VideoSegment.filter(segment=> segment.segmentId === id1)[0]['outColor'] = \"white\";\r\n          else VideoSegment.filter(segment=> segment.segmentId === id1)[0]['inColor'] = \"white\";\r\n          if (btn2 === \"OUT\") VideoSegment.filter(segment=> segment.segmentId === id2)[0]['outColor'] = \"white\";\r\n          else VideoSegment.filter(segment=> segment.segmentId === id2)[0]['inColor'] = \"white\";\r\n        }\r\n      }\r\n    }\r\n    function IN() {\r\n      var time = currentTime;\r\n      VideoSegment.filter(view => view.segmentId === segmentId)[0].start=Math.floor(time*30);\r\n      if (segmentId === 3) {\r\n        changeColor(segmentId, \"IN\", segmentId-2, \"OUT\");\r\n      }\r\n      if (segmentId > 3) {\r\n        if (VideoSegment.length > 4) {\r\n          if (segmentId === 6) changeColor(segmentId, \"IN\", 3, \"OUT\");\r\n          else if (segmentId === 5) changeColor(segmentId, \"IN\", 6, \"OUT\");\r\n          else if (segmentId === 4) changeColor(segmentId, \"IN\", 5, \"OUT\");\r\n        }\r\n        else changeColor(segmentId, \"IN\", segmentId-1, \"OUT\");\r\n      }\r\n    }\r\n    function OUT() { \r\n      var time = currentTime;\r\n      console.log(segmentId, VideoSegment.filter(view => view.segmentId === segmentId));\r\n      VideoSegment.filter(view => view.segmentId === segmentId)[0][\"end\"]=Math.floor(time*30);\r\n      if (segmentId === 1) {\r\n        changeColor(segmentId, \"OUT\", segmentId+1, \"OUT\");\r\n        changeColor(segmentId, \"OUT\", segmentId+2, \"IN\");\r\n      }\r\n      else if (segmentId === 2) {\r\n        changeColor(segmentId, \"OUT\", segmentId-1, \"OUT\");\r\n      }\r\n      else if (segmentId> 1) {\r\n        if (VideoSegment.length > 4) {\r\n          if (segmentId === 3) changeColor(segmentId, \"OUT\", 6, \"IN\");\r\n          else if (segmentId === 6) changeColor(segmentId, \"OUT\", 5, \"IN\");\r\n          else if (segmentId === 5) changeColor(segmentId, \"OUT\", 4, \"IN\");\r\n        }\r\n        else {\r\n          if (segmentId < VideoSegment.length-1) changeColor(segmentId, \"OUT\", segmentId+1, \"IN\");\r\n        }\r\n      }\r\n    }\r\n    function onSelect(id) {\r\n      if (id > 1){\r\n        var check = undefined;\r\n        if (id === 6) check=3;\r\n        else if (id === 5) check=6;\r\n        else if (id === 4) {\r\n          if (VideoSegment.length > 4) check=5;\r\n          else check=id-1;\r\n        }\r\n        else check = id-1;\r\n        var segment = VideoSegment.filter(segment => segment.segmentId === check)[0];\r\n        if (segment.start === undefined || segment.end === undefined) {\r\n          alert(\"Make sure you have filled out the previous segment entries before you select a new one\");\r\n          segmentId = id-1;\r\n          return;\r\n        }\r\n      } \r\n      segmentId = id;\r\n      // background color  \r\n      if (prevSegmentId !== segmentId) {\r\n        if (VideoSegment.filter(segment => segment.segmentId === prevSegmentId)[0]['IsChecked']===1) {\r\n          VideoSegment.filter(segment => segment.segmentId === prevSegmentId)[0]['color']=\"rgb(211, 211, 211)\";\r\n        }\r\n        else {\r\n          VideoSegment.filter(segment => segment.segmentId === prevSegmentId)[0]['color']=\"rgba(0, 0, 0, 0)\";\r\n        }         \r\n      }\r\n      VideoSegment.filter(segment => segment.segmentId === segmentId)[0]['color']=\"#AFE1AF\";\r\n      prevSegmentId = segmentId;\r\n      // in and out buttons\r\n      // document.getElementById(\"out\").disabled=false;\r\n      // document.getElementById(\"in\").disabled=false;\r\n      var Segment = SegmentJson.filter(view => view.id === parseInt(segmentId))[0].SegmentLabel;\r\n      instruction=\"Please Select the IN and OUT Points for the Segment \"+Segment;\r\n      definition=recommended_view.filter(view => view.segmentId === segmentId)[0].Definition;\r\n      cameraId = recommended_view.filter(view => view.segmentId === parseInt(segmentId))[0].cameraId;\r\n    }    \r\n    function selectTimestamp(position, id) {\r\n      var time = VideoSegment.filter(segment => segment.segmentId === id)[0][position];\r\n      document.getElementsByClassName(\"react-video-player\")[0].currentTime=time/30;\r\n    }\r\n    function onPlayback(segmentId) {\r\n      \r\n      var start = VideoSegment.filter(segment => segment.segmentId === segmentId)[0]['start'];\r\n      var end = VideoSegment.filter(segment => segment.segmentId === segmentId)[0]['end'];\r\n      console.log(start/30, end/30);\r\n      var vid = document.getElementsByClassName(\"react-video-player\")[0];\r\n      document.getElementsByClassName(\"react-video-player\")[0].currentTime=start/30;\r\n      timeStart=start/30;\r\n      vid.play();\r\n      pauseTime = (end-7)/30;\r\n      timeEnd = (end-7)/30;\r\n    }\r\n    function onCheck(id, start, end) {\r\n      var segment = VideoSegment.filter(segment => segment.segmentId === id)[0];\r\n      var checkBox = document.getElementById(\"CHECK\"+id);\r\n      if (segment.start === undefined || segment.end === undefined) {\r\n        checkBox.checked=false;\r\n        alert(\"Make sure you have filled out the segment entries before you check them\");\r\n        return;\r\n      }\r\n      if (segment.IsChecked === 0){\r\n        if (segment.color === \"white\") {\r\n          VideoSegment.filter(segment => segment.segmentId === id)[0]['color']=\"rgb(211, 211, 211)\";\r\n        }\r\n        VideoSegment.filter(segment => segment.segmentId === id)[0].IsChecked=1;  \r\n        var logsId = segmentHistories.length+1;\r\n        segmentHistories.push({\r\n          \"id\": logsId,\r\n          \"patientId\": PatientId,\r\n          \"taskId\": TaskId,\r\n          \"cameraId\": cameraId, //update onSelect\r\n          \"handId\": HandId,\r\n          \"segmentId\": id,\r\n          \"start\": start,\r\n          \"end\": end,\r\n          \"isSubmitted\": false\r\n        })   \r\n      } else {\r\n        if (segment.color === \"rgb(211, 211, 211)\") {\r\n          VideoSegment.filter(segment => segment.segmentId === id)[0]['color']=\"white\";\r\n        } \r\n        VideoSegment.filter(segment => segment.segmentId === id)[0].IsChecked=0;         \r\n      } \r\n    }\r\n    function switchView(cameraId){\r\n      // var logsId = GetSegment.length+1;\r\n      segmentHistories.push({\r\n        // \"id\": logsId,\r\n        \"patientId\": PatientId,\r\n        \"taskId\": TaskId,\r\n        \"cameraId\": cameraId, //update onSelect\r\n        \"handId\": HandId,\r\n        \"segmentId\": segmentId,\r\n        \"start\": VideoSegment.filter(view => view.segmentId === segmentId)[0].start,\r\n        \"end\": VideoSegment.filter(view => view.segmentId === segmentId)[0].end,\r\n        \"isSubmitted\": 0\r\n      })\r\n      // var vid = document.getElementsByClassName(\"react-video-player\")[0];\r\n      // vid.currentTime=0;\r\n    }\r\n    function submitFeedback(e){\r\n      e.preventDefault();\r\n      var feedback = e.target[0].value;\r\n      if (feedback === '') {\r\n        alert(\"The feedback box shouldn't be empty.\");\r\n        return;\r\n      }\r\n      var feedbackId = Feedback.length+1;\r\n      axios.post('http://localhost:5000/Feedback/'+String(feedbackId), {\r\n        \"id\": feedbackId,\r\n        \"patientId\": PatientId,\r\n        \"taskId\": TaskId,\r\n        \"cameraId\": cameraId, //update onSelect\r\n        \"handId\": HandId,\r\n        \"segmentId\": segmentId,\r\n        \"feedback\": e.target[0].value\r\n      })\r\n      .then(response => {\r\n          console.log(response)\r\n      })\r\n      .catch(error => {\r\n          console.log(error)\r\n      })\r\n      alert(\"You have successfully submitted your feedback!\");\r\n    }\r\n    function submit(e) {\r\n      e.preventDefault();\r\n      let j = 0;\r\n      var submittedSegments = [];\r\n      console.log(VideoSegment);\r\n      while (j < VideoSegment.length) {\r\n        if (VideoSegment[j]['IsChecked'] === 0){\r\n          alert(\"Check all entries before you submit!\");\r\n          return;\r\n        }\r\n        submittedSegments.push({\r\n          \"id\": VideoSegment[j]['id'] ? VideoSegment[j]['id'] : 0,\r\n          \"patientTaskHandMappingId\": VideoSegment[j]['patientTaskHandMappingId'],\r\n          \"segmentId\": VideoSegment[j]['segmentId'],\r\n          \"start\": VideoSegment[j]['start'],\r\n          \"end\": VideoSegment[j]['end']\r\n        })\r\n        j++;\r\n      }\r\n      \r\n      let model = { 'submittedSegments' : submittedSegments, 'segmentHistories': segmentHistories}\r\n      console.log('post model', model);\r\n      axios.post('http://localhost:5000/VideoSegment/', model);\r\n      alert(\"You have successfully submitted the timestamp!\");\r\n    }\r\n    \r\n    return (\r\n      \r\n        <div className='content' key='content'>\r\n          <div className='PlayVideo' key='PlayVideo'>\r\n            {\r\n              videos.filter(video => video.cameraId === this.state.cameraId)\r\n              .map(video=>\r\n                <div className=\"video-play\" key={video.fileName}>\r\n                  <h2>Patient {PatientId}, Task {TaskId}, {Camera.filter(view => view.id === video.cameraId)[0].ViewType} View</h2>\r\n                  {/* <h2>Patient {PatientId}, Task {TaskId}</h2> */}\r\n                  {/* <video id=\"video\" src={\"./Videos/\"+video.fileName} onTimeUpdate={onTimeUpdate} controls='controls'></video> */}\r\n                  <Video url={\"./Videos/\"+video.fileName} timeStart={timeStart}></Video>\r\n                </div>\r\n              )\r\n            }\r\n            <div className='buttons'>\r\n              <button id=\"in\" onClick={()=>{\r\n                IN();\r\n                this.setState({VideoSegment});\r\n              }}>IN</button>\r\n              <div className=\"instruction\">\r\n                <h5 id=\"instruction\">\r\n                {instruction}\r\n                </h5>              \r\n              </div>          \r\n              <button id=\"out\" onClick={()=>{\r\n                OUT();\r\n                this.setState({VideoSegment});\r\n              }}>OUT</button>\r\n            </div> \r\n            <p>{definition}</p>         \r\n          </div>\r\n          <div className='SideBar' key='SideBar'>\r\n            <div className='SwitchView'>\r\n              <div className='viewHeader'> \r\n                <h4>Switch View</h4> \r\n             \r\n              </div>\r\n              <div className='SideVideos'>\r\n              {\r\n                videos.filter(video => video.cameraId !== this.state.cameraId)\r\n                .map(video=>\r\n                  <div className=\"video-preview\"  key={video.fileName} onClick={() => {\r\n                    switchView(video.cameraId);\r\n                    this.setState({cameraId: video.cameraId});\r\n                  }}>\r\n                    <video src={\"./Videos/\"+video.fileName} title={\"./Videos/\"+video.fileName} className=\"sidebarVideo\"  id={video.View}></video>\r\n                    <div>\r\n                      <p>Patient {PatientId}, Task {TaskId}, {Camera.filter(view => view.id === video.cameraId)[0].ViewType} View</p>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              } \r\n              </div>                        \r\n            </div>\r\n            <div className='timestamp'>\r\n            <form className='TimeStamp' onSubmit={((e)=>{\r\n              submit(e);\r\n              this.setState({segmentHistories});\r\n              this.setState({PatientTaskHandMapping});\r\n            })}>\r\n              <div className='TimestampHeader'>\r\n                <h4>Timestamp Record</h4>\r\n              \r\n              </div>\r\n              <div className='TimestampTable'>\r\n                <table>\r\n                  <thead>\r\n                      <tr>\r\n                          <th>Segment</th>\r\n                          <th>IN</th>\r\n                          <th>OUT</th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  {\r\n                    VideoSegment\r\n                      .map(segment =>\r\n                        <tr  id={\"ROW\"+segment.segmentId}  key={segment.segmentId} style={{\"backgroundColor\": segment.color}}>\r\n                          <td  id={segment.segmentId} \r\n                          onClick={() => {\r\n                            onSelect(segment.segmentId);\r\n                            this.setState({cameraId});\r\n                            this.setState({definition});\r\n                            this.setState({instruction});\r\n                            this.setState({prevSegmentId});\r\n                            this.setState({segmentId});\r\n                          }\r\n                          }>{SegmentJson.filter(view => view.id === segment.segmentId)[0].SegmentLabel}</td>\r\n                          <td><input value={segment.start} type=\"number\" id={\"IN\"+String(segment.segmentId)} onClick={(() => {\r\n                            selectTimestamp(\"start\", segment.segmentId);\r\n                          })} readOnly=\"readOnly\" style={{\"backgroundColor\": segment.inColor}}></input></td>\r\n                          <td><input value={segment.end} type=\"number\" id={\"OUT\"+String(segment.segmentId)} onClick={(() => {\r\n                            selectTimestamp(\"end\", segment.segmentId)\r\n                          })} readOnly=\"readOnly\" style={{\"backgroundColor\": segment.outColor}}></input></td>\r\n                          <td><input className=\"check\" type=\"checkbox\" onClick={(() => {\r\n                            onCheck(segment.segmentId, segment.start, segment.end);\r\n                            this.setState({segmentHistories});\r\n                            this.setState({VideoSegment});\r\n                          })} id={\"CHECK\"+String(segment.segmentId)}/></td>\r\n                          <td><div onClick={\r\n                            () => {\r\n                              onPlayback(segment.segmentId);\r\n                              this.setState({timeEnd});\r\n                            }}><AiFillPlayCircle size={30}/></div></td>\r\n                        </tr>\r\n                      )\r\n                  }\r\n                  <tr><td colSpan=\"5\"><button type=\"submit\" className='submit'>Submit</button></td></tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </form>\r\n            </div>\r\n            <div className='feedback'>\r\n            <form className='Feedback' onSubmit={(e)=>{\r\n              submitFeedback(e);\r\n              this.setState({Feedback});\r\n            }}>\r\n              <div className='feedbackHeader'>\r\n              <h4>Feedback</h4>\r\n                </div>\r\n              <table className='feedbackTable'>\r\n                <tbody>\r\n                  <tr><td><textarea placeholder=\"Write something\"></textarea></td></tr>\r\n                  <tr><td colSpan=\"5\"><button type=\"submit\" className='submitFeedback'>Submit</button></td></tr>\r\n                  </tbody>\r\n              </table>\r\n            </form>\r\n            </div>\r\n          </div>\r\n        </div>  \r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}